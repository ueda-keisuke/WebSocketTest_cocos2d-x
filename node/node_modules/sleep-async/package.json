{
  "name": "sleep-async",
  "version": "1.0.1",
  "description": "Non blocking asynchronous sleep, with watching condition.",
  "main": "sleep-async.js",
  "scripts": {
    "test": "mocha test --reporter spec --timeout 10000"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/kamil4521/sleep-async.git"
  },
  "keywords": [
    "sleep",
    "async",
    "sleep-async"
  ],
  "author": {
    "name": "Giskard Solutions Kamil MyÅ›liwiec"
  },
  "license": "LGPL-3",
  "bugs": {
    "url": "https://github.com/kamil4521/sleep-async/issues"
  },
  "homepage": "https://github.com/kamil4521/sleep-async",
  "devDependencies": {
    "chai": "~1.9.1",
    "mocha": "~1.20.1"
  },
  "readme": "Sleep-Async\r\n===========\r\n\r\nNon blocking asynchronous sleep, with watching condition.\r\n\r\nThe library has method:\r\n\r\n### sleep(timeout, done)\r\n* `timeout` - sleep time in milisecond,\r\n* `done` - callback runned always after sleep.\r\n\r\n### sleepWithCondition(condition, timeout, done)\r\n* `condition` - condition function has checked on any sleep cycle. When condition is true, the sleep is done.\r\n* `timeout` - max timeout to sleep. \r\n* `done` - callback runned always after sleep.\r\n\r\n### sleepWithCondition(condition, options, done)\r\n* `condition` - condition function has checked on any sleep cycle. When condition is true, the sleep is done.\r\n* `options` - advanced options for sleep.\r\n  + full options example:\r\n  ```javascript\r\n    var options = {\r\n      sleep: 1000,\r\n      interval: 10\r\n    };\r\n  ```\r\n* `done` - callback runned always after sleep.\r\n\r\n\r\n\r\n## Quick exaples\r\n\r\n### Required\r\n```javascript\r\nvar sleep = require('sleep-async')();\r\n```\r\n\r\n### With `sleep(timeout, done)`\r\n\r\n```javascript\r\nsleep.sleep(5000, function(){\r\n  stopTime = new Date().getTime();\r\n  console.log('Difference: '+((stopTime-startTime)/1000)+' [s]');\r\n});\r\n\r\n```\r\n\r\n### With `sleepWithCondition(condition, timeout, done)`\r\n\r\n```javascript\r\nsleep.sleepWithCondition(function(){\r\n    return collection.length >= 10;\r\n  },\r\n  5000,\r\n  function(){\r\n    stopTime = new Date().getTime();\r\n    console.log('Difference: '+((stopTime-startTime)/1000)+' [s]');\r\n});\r\n```\r\n\r\n### With `sleepWithCondition(donfition, options, done)`\r\n\r\n```javascript\r\nvar options = {\r\n  sleep: 5000,\r\n  interval: 2500\r\n};\r\n\r\nsleep.sleepWithCondition(function(){\r\n    return collection.length >= 10;\r\n  },\r\n  options,\r\n  function(){\r\n    stopTime = new Date().getTime();\r\n    console.log('Difference: '+((stopTime-startTime)/1000)+' [s]');\r\n  });\r\n```\r\n\r\n## Examples\r\nIf You like this library, please view [example files.](https://github.com/kamil4521/sleep-async/tree/master/examples)\r\n",
  "readmeFilename": "README.md",
  "_id": "sleep-async@1.0.1",
  "dist": {
    "shasum": "f32ec8fbe4c26effe64bb9993c3ade45f9053b71"
  },
  "_from": "sleep-async@",
  "_resolved": "https://registry.npmjs.org/sleep-async/-/sleep-async-1.0.1.tgz"
}
